{
  "format_version": "1.19.0",
  "animation_controllers": {
    "controller.animation.phantore_phase_1.root_controller": {
      "states": {
        "default": {
          "transitions": [
            {
              "summon_attack": "q.is_casting && q.property('thump989:phantore_attack_state')=='summon'"
            },
            {
              "skull_shot": "q.property('thump989:phantore_attack_state')=='skullshot' || q.property('thump989:phantore_attack_state')=='skullshot_2'"
            },
            {
              "shadowfire": "q.is_casting && q.property('thump989:phantore_attack_state')=='shadowfire'"
            },
            {
              "xp_blast": "q.property('thump989:phantore_attack_state')=='xp_bomb' || q.property('thump989:phantore_attack_state')=='xp_timer'"
            },
            { "defeat": "q.health==1" }
          ]
        },
        "summon_attack": {
          "animations": ["cast_controller"],
          "transitions": [
            {
              "default": "!q.is_casting || !q.property('thump989:phantore_attack_state')=='summon'"
            },
            { "defeat": "q.health==1" }
          ],
          "blend_transition": 0.1,
          "blend_via_shortest_path": true
        },
        "skull_shot": {
          "animations": ["skull_shoot"],
          "transitions": [{ "default": "q.all_animations_finished" }]
        },
        "shadowfire": {
          "animations": ["shadowfire_cast"],
          "particle_effects": [
            {
              "effect": "spell",
              "locator": "right_hand"
            }
          ],
          "transitions": [
            {
              "default": "!q.is_casting || !q.property('thump989:phantore_attack_state')=='shadowfire'"
            },
            { "defeat": "q.health==1" }
          ]
        },
        "xp_blast": {
          "animations": ["xp_blast_controller"],
          "particle_effects": [
            {
              "effect": "xp_start",
              "locator": "soul"
            },
            {
              "effect": "xp_outer",
              "locator": "soul"
            }
          ],
          "transitions": [
            {
              "xp_recover": "!q.property('thump989:phantore_attack_state')=='xp_bomb' || q.property('thump989:phantore_attack_state')=='recover'"
            },
            { "defeat": "q.health==1" }
          ]
        },
        "xp_recover": {
          "animations": ["xp_blast_recover"],
          "transitions": [
            { "default": "q.all_animations_finished" },
            { "defeat": "q.health==1" }
          ]
        },
        "defeat": {
          "animations": ["defeat_controller"]
        }
      }
    },
    "controller.animation.phantore_phase_1.cast_controller": {
      "states": {
        "default": {
          "transitions": [{ "cast_start": "q.is_casting" }]
        },
        "cast_start": {
          "animations": ["summon_cast"],
          "transitions": [{ "cast_loop": "q.all_animations_finished" }]
        },
        "cast_loop": {
          "animations": ["summon_cast_loop"],
          "particle_effects": [
            {
              "effect": "spell",
              "locator": "right_hand"
            },
            {
              "effect": "spell",
              "locator": "left_hand"
            }
          ],
          "transitions": [{ "default": "!q.is_casting" }],
          "blend_transition": 0.2,
          "blend_via_shortest_path": true
        }
      }
    },
    "controller.animation.phantore_phase_1.xp_blast_controller": {
      "states": {
        "default": {
          "transitions": [
            {
              "blast_charge": "q.property('thump989:phantore_attack_state')=='xp_timer'"
            }
          ]
        },
        "blast_charge": {
          "animations": ["xp_blast"],
          "transitions": [{ "blast_recover": "q.all_animations_finished" }]
        },
        "blast_recover": {
          "animations": ["xp_blast_recover"],
          "transitions": [{ "default": "q.all_animations_finished" }]
        }
      }
    },
    "controller.animation.phantore_phase_1.defeat_controller": {
      "states": {
        "default": {
          "animations": ["deafeat"],
          "transitions": [{ "loop": "q.all_animations_finished" }]
        },
        "loop": {
          "animations": ["deafeat_loop"]
        }
      }
    }
  }
}
